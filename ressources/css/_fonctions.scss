//=============================================
//px to em/rem :
//=============================================
@function em($target, $context: $taille-base) {
	@return $target / $context * 1em;
}

@function rem($target, $context: $taille-base) {
	@return $target / $context * 1rem;
}


//=============================================
//Fonctions pour le calcul du rythme vertical :
//http://soqr.fr/vertical-rhythm/
//=============================================
@function line-height ($font-size, $type-vr: $vertical-rythm, $base-height: $line-height-base, $base-font: $taille-base){
	$coef: ceil(1 / ($base-height * $base-font / $font-size));
	$height: ($base-font * $base-height / $font-size) ;
	@return ($height * $coef) ;
}

@function margin-em ($font-size, $type-vr: $vertical-rythm, $base-height: $line-height-base, $base-font: $taille-base){
	$coef: ceil(1 / ($base-height * $base-font / $font-size));
	$other_coef: ceil($base-height * $base-font / $font-size);
	$height: ($base-font * $base-height / $font-size) ;
	$margin: ($height * $coef );

	@if $type-vr == '2t-1b' {
		@return ( ($margin * $other_coef) * 1em (0) (($margin / 2) * $other_coef) * 1em (0) );
	}
	@else if $type-vr == '1b' {
		@return ( (0) (0) (($margin/2) * $other_coef) * 1em (0) );
	}
	@else if $type-vr == '1t' {
		@return ( (($margin/2) * $other_coef) * 1em (0) (0) (0) );
	}
	@else if $type-vr == '1t-1b' {
		@return ( (($margin/2) * $other_coef) * 1em (0) );
	}
	@else if $type-vr == '2t-2b' {
		@return ( ($margin * $other_coef) * 1em (0) );
	}
}

@function margin-em-other ($font-size, $type-vr: $vertical-rythm, $base-height: $line-height-base, $base-font: $taille-base){
	$coef: ceil(1 / ($base-height * $base-font / $font-size));
	$height: ($base-font * $base-height / $font-size) ;
	$margin: ($height * $coef );
	@return ( ($margin) * 1em (0) );
}


//=============================================
//Colors :
//=============================================
// Calculate the luminance for a color.
@function luminance($color) {
  $red: nth($linear-channel-values, red($color) + 1);
  $green: nth($linear-channel-values, green($color) + 1);
  $blue: nth($linear-channel-values, blue($color) + 1);

  @return .2126 * $red + .7152 * $green + .0722 * $blue;
}

// Calculate the contrast ratio between two colors.
@function contrast($back, $front) {
  $backLum: luminance($back) + .05;
  $foreLum: luminance($front) + .05;

  @return max($backLum, $foreLum) / min($backLum, $foreLum);
}

// Determine whether to use dark or light text on top of given color.
@function choose-contrast-color($color) {
  $lightContrast: contrast($color, $blanc);
  $darkContrast: contrast($color, $noir);

  @if ($lightContrast > $darkContrast) {
    @return $blanc;
  }
  @else {
    @return $noir;
  }
}
